# Create networks for your services before deploying the configuration using the commands:
# `docker network create glpi-network`
# Make sure that Traefik is running and the network npm-network exists. If not, you should start Traefik with the network `npm-network`
# `docker network create npm-network`

# Deploy GLPI using Docker Compose:
# `docker compose -f glpi-npm-letsencrypt-docker-compose.yml -p glpi up -d --build`
# Remove GLPI using Docker Compose:
# `docker compose -f glpi-npm-letsencrypt-docker-compose.yml -p glpi down --rmi all`

## After Installation Steps
# docker exec -it glpi-glpi-1 sh
# rm install/install.php

# docker exec -it glpi-mariadb-1 bash
# mariadb -uroot -p${MARIADB_ROOT_PASSWORD}
# GRANT SELECT ON `mysql`.`time_zone_name` TO 'glpidbuser'@'%';
# FLUSH PRIVILEGES;
# \q
# exit

# docker exec -it glpi-glpi-1 sh
# /usr/bin/php82 bin/console database:enable_timezones

networks:
  glpi-network:
    external: true
  npm-network:
    external: true

volumes:
  mariadb-data:
  glpi-files:
  glpi-plugins:
  glpi-config:

services:
  mariadb:
    image: ${GLPI_MARIADB_IMAGE_TAG}
    volumes:
      - mariadb-data:/var/lib/mysql
    environment:
      MARIADB_DATABASE: ${GLPI_DB_NAME}
      MARIADB_USER: ${GLPI_DB_USER}
      MARIADB_PASSWORD: ${GLPI_DB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${GLPI_DB_ADMIN_PASSWORD}
    networks:
      - glpi-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  glpi:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - glpi-files:/var/www/glpi/files/:rw
      - glpi-plugins:/var/www/glpi/plugins/:rw
      - glpi-config:/var/www/glpi/config/:rw

    environment:
      TZ: ${GLPI_TIMEZONE}
    networks:
      - glpi-network
      - npm-network
    ports:
      - "8082:8080"
    healthcheck:
      test: curl --silent --fail http://127.0.0.1:8080/fpm-ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
