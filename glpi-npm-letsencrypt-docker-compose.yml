# Create networks for your services before deploying the configuration using the commands:
# `docker network create glpi-network`
# Make sure that Traefik is running and the network npm-network exists. If not, you should start Traefik with the network `npm-network`
# `docker network create npm-network`

# Deploy GLPI using Docker Compose:
# `docker compose -f glpi-npm-letsencrypt-docker-compose.yml -p glpi up -d --build`
# Remove GLPI using Docker Compose:
# `docker compose -f glpi-npm-letsencrypt-docker-compose.yml -p glpi down --rmi all`

## =========== After Installation Steps

# docker exec -it glpi-glpi-1 sh
# rm install/install.php

# docker exec -it glpi-mariadb-1 bash
# mariadb -uroot -p${MARIADB_ROOT_PASSWORD}
# GRANT SELECT ON `mysql`.`time_zone_name` TO 'glpidbuser'@'%';
# FLUSH PRIVILEGES;
# \q
# exit

# docker exec -it glpi-glpi-1 sh
# /usr/bin/php82 bin/console database:enable_timezones

# Backups
# The `backups` container in the configuration is responsible for the following:
# 1. **Database Backup**: Creates compressed backups of the database.
# Customizable backup path, filename pattern, and schedule through variables like `SOURCE_DB_PATH`, `DESTINATION_DB_PATH`, and `DAYS_TO_KEEP`.
# 2. **Volume Backup**: Archives and syncs the contents of Docker volumes using rsync.
# Customizable volume names and backup paths through variables like `volumes` and `DESTINATION_VOLUMES_PATH`.
# 3. **Project Backup**: Archives and syncs the project files using rsync.
# Customizable project path and backup path through variables like `PROJECT_DIR` and `DESTINATION_PROJECT_PATH`.
# 4. **Backup Pruning**: Periodically removes backups exceeding a specified age to manage storage.
# Customizable pruning schedule and age threshold with `DAYS_TO_KEEP`.
# By utilizing this container, consistent and automated backups of the essential components of your instance are ensured.
# Moreover, efficient management of backup storage and tailored backup routines can be achieved through easy and flexible configuration using environment variables.

networks:
  glpi-network:
    external: true
  npm-network:
    external: true

volumes:
  mariadb-data:
  glpi-files:
  glpi-plugins:
  glpi-config:
  mariadb-backups:

services:
  glpi:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - glpi-files:/var/www/glpi/files/:rw
      - glpi-plugins:/var/www/glpi/plugins/:rw
      - glpi-config:/var/www/glpi/config/:rw

    environment:
      TZ: ${GLPI_TIMEZONE}
    networks:
      - glpi-network
      - npm-network
    ports:
      - "8082:8080"
    healthcheck:
      test: curl --silent --fail http://127.0.0.1:8080/fpm-ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy

  mariadb:
    image: ${GLPI_MARIADB_IMAGE_TAG}
    volumes:
      - mariadb-data:/var/lib/mysql
    environment:
      MARIADB_DATABASE: ${GLPI_DB_NAME}
      MARIADB_USER: ${GLPI_DB_USER}
      MARIADB_PASSWORD: ${GLPI_DB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${GLPI_DB_ADMIN_PASSWORD}
    networks:
      - glpi-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  backups:
    image: ${GLPI_MARIADB_IMAGE_TAG}
    command: >-
      sh -c 'sleep $BACKUP_INIT_SLEEP &&
      while true; do
        mariadb-dump -h mariadb -u $GLPI_DB_USER -p$GLPI_DB_PASSWORD $GLPI_DB_NAME | gzip > $BACKUPS_PATH/$GLPI_DB_NAME-$(date "+%Y-%m-%d_%H-%M").sql.gz &&
        find $BACKUPS_PATH -type f -mtime +$BACKUP_PRUNE_DAYS | xargs rm -f &&
        sleep $BACKUP_INTERVAL; done'
    volumes:
      - mariadb-backups:${BACKUPS_PATH}
    environment:
      GLPI_DB_NAME: ${GLPI_DB_NAME}
      GLPI_DB_USER: ${GLPI_DB_USER}
      GLPI_DB_PASSWORD: ${GLPI_DB_PASSWORD}
      BACKUP_INIT_SLEEP: ${BACKUP_INIT_SLEEP}
      BACKUP_INTERVAL: ${BACKUP_INTERVAL}
      BACKUP_PRUNE_DAYS: ${BACKUP_PRUNE_DAYS}
      BACKUPS_PATH: ${BACKUPS_PATH}
    networks:
      - glpi-network
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
